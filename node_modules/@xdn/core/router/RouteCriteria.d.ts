/**
 * Criteria for matching a request.
 */
export default interface RouteCriteria {
    /**
     * Matches a request based on its protocol. Unless explicitly specified then `https`
     * is the default. To serve a route on both HTTPS and HTTP you can specify `/https?/`
     * regex. If an HTTP request is not matched against any route, Moovweb XDN will
     * automatically issue a redirect to equivalent HTTPS URL.
     */
    protocol?: string | RegExp;
    /**
     * Matches a request based on one or more header values. Keys are
     * case-insensitive header names, values are regular expressions to match or null.
     * When value is null then requests are matched for the header not being present.
     */
    headers?: {
        [name: string]: string | RegExp | null;
    };
    /**
     * Matches a request based on one or more cookie values. Keys are
     * case-sensitive cookie names, values are regular expressions to match or null.
     * When value is null then requests are matched for the cookie not being present.
     */
    cookies?: {
        [name: string]: string | RegExp | null;
    };
    /**
     * Matches a request based on one or more query parameter values. Keys are
     * case-sensitive names, values are regular expressions to match or null.
     * When value is null then requests are matched for the query parameter not being present.
     */
    query?: {
        [name: string]: string | RegExp | null;
    };
    /**
     * Matches a request based on the HTTP method. Instead of this, prefer using
     * `get`, `post`, `put`, `delete`, `options`, and `patch` methods.
     */
    method?: string | RegExp;
    /**
     * Matches a request based on the path. The same path syntax is used by
     * the simple form of the Router class's `match` method.
     */
    path?: string;
}
