"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var cacheManifestFromRouter_1 = __importDefault(require("./cacheManifestFromRouter"));
function addBuiltInRoutes(router) {
    addCacheManifest(router);
    try {
        // Add @xdn/devtools built-in routes if the module is installed
        require('@xdn/devtools/addBuiltInRoutes')(router);
    }
    catch (e) {
        // istanbul ignore if
        if (e.code !== 'MODULE_NOT_FOUND') {
            throw e;
        }
    }
}
exports.default = addBuiltInRoutes;
/**
 * Adds /__xdn__/cache-manifest.js, which contains:
 *
 * ```
 *  self.__XDN_CACHE_MANIFEST__ = {
 *    "/some/route": {
 *      browser: {
 *        serviceWorkerSeconds: (number)
 *      },
 *      edge: {
 *        maxAgeSeconds: (number)
 *      }
 *    }
 *  }
 * ```
 *
 * @private
 * @param router
 */
function addCacheManifest(router) {
    router.match('/__xdn__/cache-manifest.js', function (_a) {
        var cache = _a.cache, setResponseHeader = _a.setResponseHeader, send = _a.send, allowCors = _a.allowCors;
        cache({
            edge: {
                maxAgeSeconds: 60 * 60 * 24 * 365,
            },
            browser: {
                maxAgeSeconds: 60 * 60,
            },
        });
        setResponseHeader('content-type', 'text/javascript');
        allowCors();
        send(function () { return "self.__XDN_CACHE_MANIFEST__=" + cacheManifestFromRouter_1.default(router).toJSON(); });
    });
}
